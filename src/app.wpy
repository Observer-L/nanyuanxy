<script>
  import wepy from 'wepy'
  import 'wepy-async-function'

  import { format2FullTime } from './utils/formatTime'
  import config from './config'

  const mockData = config.DEBUG ? require('./mock') : null

  export default class extends wepy.app {
    config = {
      pages: [
        'pages/index',
        'pages/detail',
        'pages/account',
        'pages/report',
        'pages/board',
        'pages/items',
        'pages/web-view',
        'pages/settings',
        'pages/search'
      ],
      window: {
        backgroundTextStyle: 'light',
        navigationBarBackgroundColor: '#fff',
        navigationBarTitleText: '南苑寻游',
        navigationBarTextStyle: 'black'
      },
      permission: {
        'scope.userLocation': {
          desc: '您的位置信息将用于小程序位置接口的效果展示'
        }
      },
      requiredBackgroundModes: ['audio'],
      plugins: {
        'ocr-plugin': {
          version: '2.0.2',
          provider: 'wx4418e3e031e551be'
        }
      }
    }

    globalData = {
      markers: null,
      messages: null,
      _messages: null,
      itemMessages: null
    }

    constructor() {
      super()
      this.use('requestfix')
    }

    onLaunch() {
      this.checkVersion()
      console.log('运行环境：', __ENV_PROD__ ? 'pro' : 'dev')
      console.log('运行配置：', config)
      wx.cloud.init({
        env: config.env,
        traceUser: true
      })
    }

    loadMarkers() {
      const self = this
      return new Promise((resolve, reject) => {
        if (config.DEBUG) {
          //  加载本地mock数据
          resolve(this.clearMarkers(mockData))
        } else {
          //  加载云数据库数据
          let Ymarkers = wx.getStorageSync('Ymarkers')
          if (!Ymarkers) {
            console.log('没Y缓存')

            wx.cloud.callFunction({
              name: 'loadMarkersY',
              success(res) {
                Ymarkers = res.result.Ymarkers
                wx.setStorage({
                  key: 'Ymarkers',
                  data: Ymarkers
                })
                wx.cloud.callFunction({
                  name: 'loadMarkersX',
                  success(res) {
                    resolve(
                      self.clearMarkers({
                        Xmarkers: res.result.Xmarkers,
                        Ymarkers
                      })
                    )
                  }
                })
              }
            })
          } else {
            console.log('有Y缓存')
            wx.cloud.callFunction({
              name: 'loadMarkersX',
              success(res) {
                resolve(
                  self.clearMarkers({
                    Xmarkers: res.result.Xmarkers,
                    Ymarkers
                  })
                )
              }
            })
          }
        }
      })
    }

    clearMarkers(data) {
      return new Promise(resolve => {
        const cleanData = JSON.parse(JSON.stringify(data))
        const markers = [cleanData.Ymarkers, cleanData.Xmarkers]
        let num = 0
        for (const c of markers) {
          for (const i of c) {
            for (const j of i.data) {
              j.id = num
              num += 1
              j.iconPath = `/images/icons/markers/${i.icon}.png`
              j.width = config.markerStyle.width
              j.height = config.markerStyle.height
              j.label = Object.assign({ content: j.short_name ? j.short_name : j.name }, config.markerStyle.calloutStyle)
              if (j.time) { j.fullTime = format2FullTime(j.time) }
            }
          }
        }
        resolve(cleanData)
      })
    }

    checkVersion() {
      wx.getStorage({
        key: 'version',
        success(res) {
          if (config.version !== res.data) wx.clearStorage()
        },
        fail() {
          wx.clearStorage()
          wx.setStorage({
            key: 'version',
            data: config.version
          })
        }
      })
    }
  }
</script>
