<style lang="less">
  @import "../styles/base";

  @swiperSize: 400rpx;
  @logoSize: 140rpx;
  @padding: 10rpx;
  #swiper {
    height: @swiperSize;

    .slide-image {
      width: 100%;
      height: 100%;
    }
  }

  .header {
    .head {
      display: flex;
      padding: @padding*2 @padding;

      .logo {
        position: relative;
        top: -@logoSize / 2;
        left: 0;
        width: @logoSize;
        height: @logoSize;
        margin-bottom: -@logoSize / 2;
        border-radius: 50%;
        border: 3px solid #fff;
      }

      .title {
        display: flex;
        flex: 1;
        justify-content: space-between;
        margin: 0 @padding * 2;

        .name {
          letter-spacing: 2px;
        }
      }
    }
    .music-player {
      padding: 0 @padding;
      // background: @grayBg;
    }
    .more {
      padding: @padding;
      .info {
        font-size: 12px;
        padding: @padding 0;
      }
      .info:nth-child(odd) {
        background: @themeColorY;
      }
    }
    .desc {
      padding: @padding*2 @padding;
      .title{
      }
      .content {
        font-size: 16px;
      }
    }
  }

  @keyframes play{
    0%{transform: rotate(0deg);}
    100%{transform: rotate(360deg);}
  }

  .mp-wrapper {
    display: flex;
    justify-content: space-around;
    .timeline {
      display: flex;
      align-items:center;
      width: 80%;
      .time {
        font-size: 9px;
        color: #000;
      }
      slider {
        flex: 1;
      }
    }

    @coverSize: 120rpx;
    .cover-wrapper {
      position: relative;
      .cover {
        width:@coverSize;
        height:@coverSize;
        border-radius:50%;
        animation: play 10s linear infinite;
        &.play{
          animation-play-state: running;
        }
        &.pause {
          animation-play-state: paused;
        }
      }
      .control {
        position:absolute;
        top:@coverSize / 2;
        left:@coverSize / 2;
        transform: translate(-50%, -50%);
      }
    }
  }
</style>

<template>
  <view>
    <swiper
      id="swiper"
      indicator-dots="{{marker.images.length > 1}}"
      autoplay="{{true}}"
      interval="{{5000}}"
      duration="{{1000}}"
    >
      <block
        wx:for="{{marker.images}}"
        wx:key="{{index}}"
      >
        <swiper-item>
          <image
            src="{{item}}"
            data-id="{{index}}"
            class="slide-image"
            @tap="previewImage"
          ></image>
        </swiper-item>
      </block>
    </swiper>
    <view class="header">
      <view class="head {{}}">
        <image
          class="logo"
          wx:if="{{marker.logo}}"
          src="/images/logo/{{marker.logo}}.png"
        ></image>
        <view class="title">
          <view class="name">{{marker.name}}</view>
          <view class="action" @tap="navigate">导航</view>
        </view>
      </view>
      <view
        wx:if="{{marker.music}}"
        class="music-player"
      >
        <MusicPlayer></MusicPlayer>
      </view>
      <view class="more">
        <view class="info address" wx:if="{{marker.contact.address}}">icon {{marker.contact.address}}</view>
        <view class="info phone" wx:if="{{marker.contact.phone}}">icon {{marker.contact.phone}}</view>
        <view class="info panorama" wx:if="{{marker.panorama}}">icon {{marker.panorama}}</view>
      </view>
      <view class="desc">
        <view class="title">简介</view>
        <view class="content">{{marker.desc}}</view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import { getTargetMarker } from '../store/actions'
  import {formatTime2Duration} from '../utils/formatTime'
  import MusicPlayer from '../components/music-player'
  import config from '../config'

  @connect({
    markers(state) {
      return state.markers.markers
    }
  })

  export default class Detail extends wepy.page {
    config = {
      navigationBarTitleText: 'test'
    }

    components = {
      MusicPlayer
    }

    data = {
      marker: {}
    }

    methods = {
      previewImage(e) {
        const targetId = e.target.dataset.id
        console.log(this.marker.images[targetId])
        wx.previewImage({
          current: this.marker.images[targetId], // 当前显示图片的http链接
          urls: this.marker.images // 需要预览的图片http链接列表
        })
      },
      navigate() {
        wx.openLocation({
          latitude: this.marker.location[0],
          longitude: this.marker.location[1],
          name: this.marker.name,
          scale: 15
        })
      }
    }

    onLoad(options) {
      if (options.id) {
        options.id = Number(options.id)
        options.type = options.mode === 'you' ? decodeURI(options.type) : ''
        wepy.$store.dispatch(getTargetMarker(options))
        this.marker = wepy.$store.getState().markers.marker
      } else {
        this.marker = config.school
      }

      if (this.marker.music) {
        const ctx = this.$parent.globalData.audioCtx
        this.$invoke('MusicPlayer', 'init', {
          id: this.marker.id,
          music: this.marker.music,
          ctx
        })
        ctx.onTimeUpdate(() => {
          this.$invoke('MusicPlayer', 'updateTime', ctx.currentTime)
        })
      }

    }
  }
</script>
