<style lang="less">
  @import "../styles/base";

  @swiperSize: 400rpx;
  @logoSize: 140rpx;
  @padding: 10rpx;
  #swiper {
    height: @swiperSize;

    .slide-image {
      width: 100%;
      height: 100%;
    }
  }

  .header {
    .head {
      display: flex;
      padding: @padding*2 @padding;

      .logo {
        position: relative;
        top: -@logoSize / 2;
        left: 0;
        width: @logoSize;
        height: @logoSize;
        margin-bottom: -@logoSize / 2;
        border-radius: 50%;
        border: 3px solid #fff;
      }

      .title {
        display: flex;
        flex: 1;
        justify-content: space-between;
        margin: 0 @padding * 2;

        .name {
          letter-spacing: 2px;
        }
      }
    }
    .music-player {
      padding: 0 @padding;
      // background: @grayBg;
    }
    .more {
      padding: @padding;
      .info {
        font-size: 12px;
        padding: @padding 0;
      }
      .info:nth-child(odd) {
        background: @themeColorY;
      }
    }
    .desc {
      padding: @padding*2 @padding;
      .title{
      }
      .content {
        font-size: 16px;
      }
    }
  }

  /* MUSIC */

  @keyframes play{
    0%{transform: rotate(0deg);}
    100%{transform: rotate(360deg);}
  }

  .mp-wrapper {
    display: flex;
    justify-content: space-around;
    .timeline {
      display: flex;
      align-items:center;
      width: 80%;
      .time {
        font-size: 9px;
        color: #000;
      }
      slider {
        flex: 1;
      }
    }

    @coverSize: 120rpx;
    .cover-wrapper {
      position: relative;
      .cover {
        width:@coverSize;
        height:@coverSize;
        border-radius:50%;
        animation: play 10s linear infinite;
        &.play{
          animation-play-state: running;
        }
        &.pause {
          animation-play-state: paused;
        }
      }
      .control {
        position:absolute;
        top:@coverSize / 2;
        left:@coverSize / 2;
        transform: translate(-50%, -50%);
        color: @themeColorY;
      }
    }
  }
</style>

<template>
  <view>
    <swiper
      id="swiper"
      indicator-dots="{{marker.images.length > 1}}"
      autoplay="{{true}}"
      interval="{{5000}}"
      duration="{{1000}}"
    >
      <block
        wx:for="{{marker.images}}"
        wx:key="{{index}}"
      >
        <swiper-item>
          <image
            src="{{item}}"
            data-id="{{index}}"
            class="slide-image"
            @tap="previewImage"
          ></image>
        </swiper-item>
      </block>
    </swiper>
    <view class="header">
      <view class="head {{}}">
        <image
          class="logo"
          wx:if="{{marker.logo}}"
          src="/images/logo/{{marker.logo}}.png"
        ></image>
        <view class="title">
          <view class="name">{{marker.name}}</view>
          <view class="action" @tap="navigate">导航</view>
        </view>
      </view>

      <view wx:if="{{marker.music}}" class="music-player">
        <view class="mp-wrapper">
          <view class="timeline">
            <view class="start time">{{FormatCurrentTime}}</view>
            <slider
              value="{{music.sliderValue}}"
              min="0"
              max="{{music.sliderMax}}"
              @change="onChangeSlide"
              step="1"
            ></slider>
            <view class="end time">{{music.duration}}</view>
          </view>
          <view class="cover-wrapper" @tap="play">
            <image
              class="cover {{music.isPlaying ? 'play' : 'pause'}}"
              src="{{music.coverImgUrl}}">
            </image>
            <view class="control">{{music.isPlaying ? 'Pause' : 'Play'}}</view>
          </view>
        </view>
        <!--<MusicPlayer></MusicPlayer>-->
      </view>

      <view class="more">
        <view class="info address" wx:if="{{marker.contact.address}}">icon {{marker.contact.address}}</view>
        <view class="info phone" wx:if="{{marker.contact.phone}}">icon {{marker.contact.phone}}</view>
        <view class="info panorama" wx:if="{{marker.panorama}}" @tap="show360">icon 全景观看</view>
      </view>
      <view class="desc">
        <view class="title">简介</view>
        <view class="content">{{marker.desc}}</view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import { getTargetMarker } from '../store/actions'
  import MusicPlayer from '../components/music-player'
  import {formatTime2Duration} from '../utils/formatTime'
  import config from '../config'

  @connect({
    markers(state) {
      return state.markers.markers
    }
  })

  export default class Detail extends wepy.page {
    config = {
      navigationBarTitleText: 'test'
    }

    components = {
      MusicPlayer
    }

    data = {
      marker: {},
      music: {
        audioCtx: null,
        isReady: false,
        isPlaying: false,
        isSliding: false,
        title: '',
        artists: '',
        coverImgUrl: '',
        start: '00:00',
        end: '00:00',
        sliderValue: 0,
        sliderMax: 0,
        currentTime: 0,
        duration: 100
      }
    }

    computed = {
      FormatCurrentTime() {
        return formatTime2Duration(this.music.currentTime)
      }
    }

    methods = {
      previewImage(e) {
        const targetId = e.target.dataset.id
        console.log(this.marker.images[targetId])
        wx.previewImage({
          current: this.marker.images[targetId], // 当前显示图片的http链接
          urls: this.marker.images // 需要预览的图片http链接列表
        })
      },
      navigate() {
        wx.openLocation({
          latitude: this.marker.location[0],
          longitude: this.marker.location[1],
          name: this.marker.name,
          scale: 15
        })
      },
      show360() {
        wx.navigateTo({
          url: './web-view?scene_id=' + this.marker.panorama
        })
      },
    //  MUSIC
      play() {
        const self = this
        const music = this.music
        if (!music.audioCtx.src) {
          console.log('no audio title', music.audioCtx)
          music.audioCtx.title = music.title
          music.audioCtx.src = music.src
          music.isPlaying = true
          // setTimeout(() => {
          //   music.audioCtx.pause()
          // }, 10)
          return
        }
        if (music.isPlaying) {
          console.log('pause')
          music.audioCtx.pause()
          music.isPlaying = false
        } else {
          console.log('play')
          music.audioCtx.play()
          music.isPlaying = true
        }
      }
    }

    onLoad(options) {
      const self = this
      if (options.id) {
        options.id = Number(options.id)
        options.type = options.mode === 'you' ? decodeURI(options.type) : ''
        wepy.$store.dispatch(getTargetMarker(options))
        this.marker = wepy.$store.getState().markers.marker
      } else {
        this.marker = config.school
      }

      if (this.marker.music) {
        if (!this.music.audioCtx) {
          // MUSIC
          const music = this.marker.music
          const audioCtx = this.$parent.globalData.audioCtx
          this.music.audioCtx = this.$parent.globalData.audioCtx
          this.music.title = music.title
          this.music.src = music.src
          this.music.artists = music.artists
          this.music.coverImgUrl = music.coverImgUrl
          this.music.duration = formatTime2Duration(music.duration)
          this.music.currentTime = 0
          this.music.sliderMax = music.duration
          this.music.sliderValue = 0
          console.log(this.music)

          audioCtx.coverImgUrl = this.music.coverImgUrl

          audioCtx.onPlay(() => {
            self.music.isPlaying = true
            self.$apply()
          })
          audioCtx.onPause(() => {
            self.music.isPlaying = false
            self.$apply()
          })

          audioCtx.onTimeUpdate(() => {
            self.music.currentTime = audioCtx.currentTime
            self.$apply()
          })
        } else {
          console.log('更新数据')
          this.music.currentTime = 0
          this.music.sliderMax = this.music.duration
          this.music.sliderValue = 0
        }
      }
    }

    setPlayingMusic(currentPos) {
    }
  }
</script>
