<style lang="less">
  @import "../styles/base";
  @import "../styles/weui";

  #report-map {
    width: 100vw;
    height: 90vh;
    transition: all .3s ease;

    &.small {
      height: 40vh;
      .location {
        /*left:100%;*/
        /*transform:translateX(-100%);*/
        transform:translateX(55vw);
      }
    }

    .mask {
      display: none;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, .5);
      &.show {
        display: block;
      }
    }

    .location {
      position: absolute;
      top: 35vh;
      left: 30%;
      transform: translateX(0);
      background: tomato;
      transition: all .3s ease;
    }
  }

  /* PROGRESS BAR */
  .progress-wrapper {
    height: 10vh;
    text-align: center;
    background-color: @grayBg;
    padding-top: 20rpx;
  }


  .step-wrapper {
    display: flex;
    transition: all .3s ease;
    .step {
      min-width: 100vw;
      height: 90vh;
      overflow-y: hidden;
    }
  }
  /* CONTROL */
  .control {
    display: flex;
    justify-content: space-between;
    align-items:center;
    background: @grayBg;
    position:absolute;
    width:100%;
    bottom:12vh;
    padding: 20rpx;
    box-sizing: border-box;
    .desc {
      flex: 1;
      text-align: center;
      background: @grayBg;
    }
    .next, .prev {
      width: 80rpx;
      height: 80rpx;
      background: #fff;
      font-size: 24px;
      text-align: center;
    }
  }

  .form-wrapper {
    margin: 20rpx;
    .slider {
      align-items: center;
      van-slider {
        flex: 1;
      }
    }
    .custom-input {
      flex: 1;
      padding-left: 10rpx;
    }
  }

  .selected {
    border: 1px solid tomato;
  }

  .tips {
    font-size: 12px;
    color: #aaa;
    margin-left:48rpx;
    .action {
      color: @foundColor;
      padding: 0 4rpx;
    }
  }

  /* SCAN */
  .scan-wrapper {
    position: relative;
    width: 100%;
    height: 400rpx;
    overflow: hidden;
    .add {
      font-size: 5em;
      color: #aaa;
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }
    .scan-frame, .scan-mask, .card {
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
    }
    .scan-frame {
      z-index: 98;
    }
    .scan-mask {
      z-index: 99;
      transform: translateY(-100%);

      &.scanning {
        transform: translateY(100%);
        animation: scanning 2s cubic-bezier(0.15, 0.44, 0.76, 0.64);
        animation-iteration-count: infinite;
      }
    }
    .card {
    }
  }

  .icon {
    width: 48rpx;
    height: 48rpx;
    display: block;
    &.camera {
      opacity: .7;
    }
  }


  @keyframes scanning {
    0% {
      transform: translateY(-100%);
    }
    1% {
      transform: translateY(-100%) scaleY(1);
    }
    99% {
      transform: translateY(100%) scaleY(1);
    }
    100% {
      transform: translateY(100%) scaleY(-1);
    }
  }
</style>
<template>
  <view style="height: 100vh; overflow:hidden;">
    <view class="step-wrapper" style="margin-left: -{{(currentStep-1)*100}}vw">
      <!-- STEP 1 -->
      <view class="step">
        <map
          class="{{marker.latitude ? 'small' : ''}}"
          id="report-map"
          markers="{{markers}}"
          circles="{{markers}}"
          latitude="{{mapCenter[0]}}"
          longitude="{{mapCenter[1]}}"
          scale="{{scale}}"
          style="{{currentStep !== 1 ? 'display:none' : ''}}"
        >
          <cover-view class="mask {{showMask ? 'show' : ''}}" @tap="togglePicker"></cover-view>
          <cover-view class="location" @tap="chooseLocation">
            <block wx:if="{{!marker.latitude}}">哪里{{type === 'lost' ? '丢失' : '捡到'}}的？</block>
            <block wx:else>重选</block>
          </cover-view>
        </map>

        <view class="form-wrapper">
          <van-cell title="丢失范围" custom-class="slider" icon="aim">
            <van-slider
              slot="right-icon"
              value="{{marker.radius}}"
              @drag="changeRange"
            ></van-slider>
          </van-cell>
          <van-cell
            title="丢失区域"
            value="{{area[0] + area[1] || '请选择丢失区域'}}"
            icon="location-o"
            is-link
            arrow-direction="{{currentShowPicker === 'area' ? 'up' : 'down'}}"
            id="area"
            @tap="togglePicker"
          ></van-cell>
        </view>
      </view>
      <!-- STEP 2 -->
      <view class="step">

        <view class="form-wrapper">
          <van-cell
            title="物品类型"
            value="{{itemType[0] + (itemType[0] === '其他' ? '' : itemType[1]) || '请选择物品类型'}}"
            icon="location-o"
            arrow-direction="{{currentShowPicker === 'itemType' ? 'up' : 'down'}}"
            id="itemType"
            @tap="togglePicker"
          >
            <input
              wx:if="{{itemType[0] === '其他'}}"
              class="custom-input"
              slot="right-icon"
              placeholder="请输入物品类型"
              focus="{{itemType[0] === '其他' && !showPicker}}"
              maxlength="{{6}}"
              id="custom-it"
              @input="inputFormData"
            />
          </van-cell>

          <!--<view class="scan-wrapper" @tap="chooseCard" wx:if="{{itemType[0] === '证件'}}">-->
            <!--<image src="../images/scan-mask.png" class="scan-mask {{scanning ? 'scanning' : ''}}"></image>-->
            <!--<image src="../images/scan.png" class="scan-frame"></image>-->
            <!--<view class="add" wx:if="{{!formData.images.length}}">+</view>-->
            <!--<image src="{{formData.images[0]}}" class="card" wx:else></image>-->
          <!--</view>-->

          <van-field
            wx:if="{{cardType}}"
            value="{{ formData.cardId }}"
            label="卡号"
            type="idcard"
            required="{{true}}"
            placeholder="请输入卡号"
            border="{{ false }}"
            id="card"
            @input="inputFormData"
            use-icon-slot="{{certificateType !== 'schoolCard' && certificateType !== 'other' }}"
          >
            <ocr-navigator
              slot="icon"
              wx:if="{{itemType[0] === '证件'}}"
              @onSuccess="handleOCRresult"
              certificateType="{{certificateType}}"
            >
              <image class="icon camera" src="../images/icons/camera-fill.png"></image>
            </ocr-navigator>
          </van-field>


          <van-field
            value="{{ formData.name }}"
            label="姓名"
            placeholder="请输入姓名"
            border="{{ false }}"
            id="name"
            @input="inputFormData"
          ></van-field>

          <van-field
            required="{{!cardType}}"
            value="{{ formData.desc }}"
            label="描述信息"
            placeholder="请输入描述信息"
            maxlength="{{60}}"
            border="{{ false }}"
            id="desc"
            @input="inputFormData"
          ></van-field>


          <view class="weui-cells" wx:if="{{itemType[0] !== '证件'}}">
            <view class="weui-cell">
              <view class="weui-cell__bd">
                <view class="weui-uploader">
                  <view class="weui-uploader__hd">
                    <view class="weui-uploader__title">图片上传</view>
                    <view class="weui-uploader__info">{{formData.images.length || 0}}/3</view>
                  </view>
                  <view class="weui-uploader__bd">

                    <view class="weui-uploader__files" id="uploaderFiles">
                      <block wx:for="{{formData.images}}" wx:key="*this">
                        <view
                          class="weui-uploader__file {{imageAction.currentImageIndex == index ? 'selected' : ''}}"
                          @tap="previewImage"
                          @longpress="toggleActionSheet"
                          id="{{item}}"
                        >
                          <image class="weui-uploader__img" src="{{item}}" mode="aspectFill" />
                        </view>
                      </block>
                    </view>

                    <view class="weui-uploader__input-box" wx:if="{{formData.images.length !== 3}}">
                      <view class="weui-uploader__input" @tap="chooseImage"></view>
                    </view>

                  </view>
                </view>
              </view>
            </view>
          </view>

        </view>
      </view>

      <!-- STEP 3 -->
      <view class="step">

        <view class="form-wrapper">
          <van-cell
            title="丢失时间"
            value="{{formatTime || '请选择丢失时间'}}"
            icon="location-o"
            is-link
            arrow-direction="{{currentShowPicker === 'datetime' ? 'up' : 'down'}}"
            id="datetime"
            @tap="togglePicker"
          ></van-cell>
        </view>

      </view>

      <!-- STEP 4 -->
      <view class="step">

        <view class="form-wrapper">
          <van-field
            wx:if="{{!formData.customContact.status}}"
            value="{{ formData.phone }}"
            label="联系电话"
            type="number"
            placeholder="请输入联系电话"
            border="{{ false }}"
            id="phone"
            @input="inputFormData"
          ></van-field>
          <van-field
            wx:else
            value="{{ formData.customContact.content }}"
            label="领取地点"
            placeholder="请输入领取地点"
            id="custom-contact"
            @input="inputFormData"
            border="{{ false }}"
          ></van-field>
        </view>

        <view class="tips">
          <block wx:if="{{!formData.customContact.status}}">
            不方便留下个人信息？您还可以<text class="action" @tap="switchContact">指定领取地点</text>。
          </block>
          <block wx:else="{{formData.customContact.status}}">
            您还可以<text class="action" @tap="switchContact">留下联系电话</text>。
          </block>
        </view>

      </view>

    </view>


    <!-- CONTROL -->
    <view class="control" wx:if="{{marker.latitude}}">
      <view class="prev" @tap="prev" wx:if="{{currentStep !== 1}}">👈</view>
      <view class="desc" wx:if="{{tips[currentStep - 1]}}">{{tips[currentStep - 1]}}</view>
      <view class="next" @tap="next" wx:if="{{currentStep < 4}}">👉</view>
      <van-button
        wx:else
        square
        type="primary"
        loading="{{loading}}"
        @tap="submit"
      >
        发布
      </van-button>
    </view>

    <!-- PROGRESS BAR -->
    <view class="progress-wrapper">
      <i-progress percent="{{percent}}" status="active"></i-progress>
    </view>

    <!-- POPUP PICKER -->
    <van-popup
      show="{{ currentShowPicker === 'area' }}"
      @close="togglePicker"
      position="bottom"
    >
      <van-picker columns="{{ areas }}" @change="changeAreaOrItemType" ></van-picker>
    </van-popup>

    <van-popup
      show="{{ currentShowPicker === 'itemType' }}"
      @close="togglePicker"
      position="bottom"
    >
      <van-picker columns="{{ itemTypes }}" @change="changeAreaOrItemType" ></van-picker>
    </van-popup>

    <van-popup
      show="{{ currentShowPicker === 'datetime' }}"
      @close="togglePicker"
      position="bottom"
    >
      <van-datetime-picker
        type="datetime"
        show-toolbar="{{false}}"
        value="{{ dateTimePicker.currentDate }}"
        min-date="{{ dateTimePicker.minDate }}"
        max-date="{{ dateTimePicker.maxDate }}"
        @input="selectDatetime"
      ></van-datetime-picker>
    </van-popup>

    <!-- ACTION SHEET -->
    <van-action-sheet
      show="{{ imageAction.show }}"
      actions="{{ imageAction.actions }}"
      cancel-text="取消"
      @close="toggleActionSheet"
      @select="selectActionSheet"
      @cancel="toggleActionSheet"
    ></van-action-sheet>

    <!-- GLOBAL STUFF -->
    <van-toast id="van-toast" ></van-toast>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import config from '../config'
  import {formatTime, blurId} from '../utils'
  import Toast from '../components/vant/toast/toast'
  import itemTypes from '../config/itemTypes'

  export default class Report extends wepy.page {
    config = {
      navigationBarTitleText: 'test',
      disableScroll: true,
      usingComponents: {
        'i-progress': '../components/iview/progress/index',
        'van-popup': '../components/vant/popup/index',
        'van-field': '../components/vant/field/index',
        'van-cell': '../components/vant/cell/index',
        'van-slider': '../components/vant/slider/index',
        'van-picker': '../components/vant/picker/index',
        'van-toast': '../components/vant/toast/index',
        'van-datetime-picker': '../components/vant/datetime-picker/index',
        'van-action-sheet': '../components/vant/action-sheet/index',
        'van-button': '../components/vant/button/index',
        'ocr-navigator': 'plugin://ocr-plugin/ocr-navigator'
      }
    }

    data = {
      type: '',
      mapCenter: config.school.location,
      scale: 17,
      percent: 0,
      currentStep: 1,
      markers: [{
        iconPath: '/images/icons/markers/view.png',
        width: config.markerStyle.width,
        height: config.markerStyle.height,
        radius: 30,
        ...config.markerStyle.circleStyle
      }],
      currentShowPicker: null,
      showPicker: false,
      area: [],
      areas: [
        {
          values: Object.keys(config.areas)
        },
        {
          values: Object.values(config.areas)[0]
        }
      ],
      itemType: [],
      itemTypes: [
        {
          values: Object.keys(config.itemTypes)
        },
        {
          values: Object.values(config.itemTypes)[0]
        }
      ],
      tips: ['s1', '', 's3', 's4'],
      formData: {
        cardId: '',
        name: '',
        desc: '',
        time: '',
        images: [],
        phone: '',
        customContact: {
          status: false,
          address: ''
        }
      },
      dateTimePicker: {
        minHour: 10,
        maxHour: 20,
        minDate: new Date(2019, 0, 1).getTime(),
        maxDate: new Date().getTime(),
        currentDate: new Date().getTime()
      },
      imageAction: {
        currentImageIndex: null,
        show: false,
        actions: [
          {
            name: '删除'
          },
          {
            name: '替换'
          }
        ]
      },
      loading: false,
      scanning: false
    }

    computed = {
      marker() {
        return this.markers[0]
      },
      showMask () {
        return this.currentShowPicker === 'area' || !this.markers[0].latitude
      },
      cardType() {
        return this.itemType[0] === '证件'
      },
      formatTime() {
        return formatTime.format2FullTime(this.formData.time)
      },
      certificateType() {
        // 证书类型包含三种 身份证：idCard、驾驶证：drivingLicense、银行卡：bankCard
        let type
        if (this.itemType[0] === '证件') {
          switch (this.itemType[1]) {
            case '校园卡':
              type = 'schoolCard'
              break
            case '身份证':
              type = 'idCard'
              break
            case '银行卡':
              type = 'bankCard'
              break
            case '驾驶证':
              type = 'drivingLicense'
              break
            default:
              type = 'other'
              break
          }
        }
        return type
      }
    }

    methods = {
      chooseLocation() {
        const self = this
        wx.chooseLocation({
          success(res) {
            self.markers[0].latitude = res.latitude
            self.markers[0].longitude = res.longitude
            self.mapCenter = [res.latitude, res.longitude]
            self.scale = 18
            self.percent = 25
            self.$apply()
          }
        })
      },
      changeRange(e) {
        this.markers[0].radius = e.detail.value
      },
      togglePicker(e) {
        this.showPicker = !this.showPicker
        this.currentShowPicker = this.showPicker ? e.target.id : null
        this.setDefaultPickerValue()
      },
      changeAreaOrItemType(e) {
        const son = this.currentShowPicker
        const parent = this.currentShowPicker + 's'
        switch (e.detail.index) {
          case 0:
            const index = e.detail.picker.getIndexes()[0]
            this[parent][1].values = Object.values(config[parent])[index]
            this[son][0] = e.detail.value[0]
            this[son][1] = this[parent][1].values[0]
            break
          case 1:
            this[son][1] = e.detail.value[1]
            break
        }
      },
      inputFormData(e) {
        switch (e.target.id) {
          case 'card':
            this.formData.cardId = e.detail
            break
          case 'name':
            this.formData.name = e.detail
            break
          case 'desc':
            this.formData.desc = e.detail
            break
          case 'custom-it':
            this.itemType[1] = e.detail.value
            break
          case 'phone':
            this.formData.phone = e.detail
            break
          case 'custom-contact':
            this.formData.customContact.address = e.detail
            break
        }
      },
      selectDatetime(e) {
        this.formData.time = e.detail
      },
      chooseImage() {
        const self = this
        wx.chooseImage({
          count: 3 - this.formData.images.length,
          sizeType: ['original', 'compressed'],
          sourceType: ['album', 'camera'],
          success(res) {
            const tempFilePaths = res.tempFilePaths
            self.formData.images = self.formData.images.concat(tempFilePaths)
            self.$apply()
          }
        })
      },
      previewImage(e) {
        wx.previewImage({
          current: e.currentTarget.id,
          urls: this.formData.images
        })
      },
      toggleActionSheet(e) {
        for (const i in this.formData.images) {
          if (this.formData.images[i] === e.currentTarget.id) this.imageAction.currentImageIndex = i
        }
        this.imageAction.show = !this.imageAction.show
        if (!this.imageAction.show) this.imageAction.currentImageIndex = null
      },
      selectActionSheet(e) {
        if (e.detail.name === '删除') {
          this.formData.images.splice(this.imageAction.currentImageIndex, 1)
        } else {
          const self = this
          const index = this.imageAction.currentImageIndex
          wx.chooseImage({
            count: 1,
            sizeType: ['original', 'compressed'],
            sourceType: ['album', 'camera'],
            success(res) {
              self.formData.images[index] = res.tempFilePaths[0]
              self.$apply()
            }
          })
        }
        this.imageAction.show = false
        this.imageAction.currentImageIndex = null
      },
      switchContact() {
        this.formData.customContact.status = !this.formData.customContact.status
      },
      submit() {
        const self = this
        if (!this.checkForm()) {
          Toast.fail('请填写完表单')
          return
        }
        this.loading = true
        // TODO: 入库
        const formData = this.formData
        const data = {
          area: this.area,
          contact: {
            address: formData.customContact.status ? formData.customContact.address : '',
            phone: !formData.customContact.status ? formData.phone : ''
          },
          created_time: new Date().getTime(),
          desc: formData.desc,
          images: formData.images,
          location: [this.marker.latitude, this.marker.longitude],
          cat: this.itemType[0],
          name: this.itemType[1],
          range: this.marker.radius,
          status: 0,
          time: formData.time,
          type: this.type
        }
        if (config.DEBUG) {
          setTimeout(() => {
            self.loading = false
            self.$apply()
            Toast.success('测试发布成功')
            setTimeout(() => {
              Toast.clear()
              wx.reLaunch({
                url: './index?mode=xun'
              })
            }, 1500)
          }, 1500)
        } else {
          const db = wx.cloud.database()
          db.collection('xun_' + this.type).add({
            data
          }).then(() => {
            self.loading = false
            self.$apply()
            Toast.success('发布成功')
            setTimeout(() => {
              Toast.clear()
              wx.reLaunch({
                url: './index?mode=xun'
              })
            }, 1500)
          })
        }
      },
      chooseCard() {
        const self = this
        wx.chooseImage({
          count: 1,
          sizeType: ['original', 'compressed'],
          sourceType: ['album', 'camera'],
          success(res) {
            const tempFilePaths = res.tempFilePaths
            self.formData.images = tempFilePaths
            self.scanning = true
            self.$apply()
            self.ocr()
          }
        })
      },
      handleOCRresult(e) {
        const result = e.detail
        switch (this.certificateType) {
          case 'idCard':
            this.formData.cardId = blurId(result.id)
            this.formData.name = result.name
            break
          case 'bankCard':
            this.formData.cardId = blurId(result.number)
            this.formData.name = result.bankName
            break
          case 'drivingLicense':
            this.formData.cardId = result.vehicleType
            this.formData.name = result.owner
            break
        }
      },
      next() {
        if (!this.checkForm()) {
          Toast.fail('请填写完表单')
          return
        }
        this.percent += 25
        this.currentStep += 1
      },
      prev() {
        this.percent -= 25
        this.currentStep -= 1
      }
    }

    ocr() {
      const self = this
      const access_token = wx.getStorageSync('access_token').access_token
      const img_url = encodeURI(this.formData.images[0])
      // wx.request({
      //   url: `https://api.weixin.qq.com/cv/ocr/idcard`, // 仅为示例，并非真实的接口地址
      //   method: 'POST',
      //   data: {
      //     type: 'MODE',
      //     img_url,
      //     access_token
      //   },
      //   header: {
      //     'content-type': 'application/json'
      //   },
      //   success(res) {
      //     console.log(res.data)
      //     self.scanning = false
      //     self.$apply()
      //   }
      // })
    }

    onLoad(options) {
      this.type = options.type
      const circleColor = config.markerStyle.circleStyle.colors[this.type]
      this.markers[0].color = circleColor
      this.markers[0].fillColor = circleColor + '50' // 透明度
    }

    checkForm() {
      switch (this.currentStep) {
        case 1:
          return !!this.area.length
        case 2:
          const formData = this.formData
          const itemType = this.itemType
          let flag
          if (!itemType.length) {
            flag = false
          } else if (itemType[0] === '其他') {
            flag = !!itemType[1]
          } else if (itemType[0] === '证件') {
            flag = !!formData.cardId
          } else {
            flag = !!formData.desc
          }
          if (itemType[0] !== '证件' && formData.images.length < 1) {
            flag = false
          }
          return flag
        case 3:
          return true
        case 4:
          if (this.formData.customContact.status) {
            return !!this.formData.customContact.address
          } else {
            return !!this.formData.phone
          }
      }
    }

    setDefaultPickerValue() {
      if (!this.currentShowPicker) return
      if (this.currentShowPicker === 'datetime') {
        if (!this.formData.time) this.formData.time = new Date().getTime()
      } else {
        const son = this.currentShowPicker
        const parent = this.currentShowPicker + 's'
        if (!this[son].length) {
          this[son] = [this[parent][0].values[0], this[parent][1].values[0]]
        }
      }
    }
  }
</script>
